- Rust install
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
// if you are in windows see more installation method here
https://forge.rust-lang.org/infra/other-installation-methods.html
- React node js install 

- Next, run the following commands on your terminal to verify that everything is installed and working properly:

  rustc --version
  cargo --version
  node --version
  npm --version

create a Rust project using the following command:

 **Building the WebSocket server in rust**

cargo new rust-react-chat
Next, add this package to the Cargo.toml file:

[package]
name = "rust-react-chat"
version = "0.1.0"
edition = "2021"

[dependencies]
actix = "0.13.0"
actix-files = "0.6.2"
actix-web = "4.2.1"
actix-web-actors = "4.1.0"
rand = "0.8.5"
serde = "1.0.147"
serde_json = "1.0.88"
Now, install diesel_cli; weâ€™ll use this as our ORM:

cargo install diesel_cli --no-default-features --features sqlite

packages we are using:

-- actix_cors: Will be used to debug the UI; we will accept POST and GET requests from localhost:3000 or localhost:8080
-- actix_web: For all HTTP-related features in the Actix Web package
-- actix_files: For embedding static files to one of our routes
-- diesel: Will be used to query the data from our SQLite database. If you prefer, you can change this to Postgres or MySQL
-- serde_json: Will be used to parse the JSON data that we will send to the React app.

**Creating routes for our server**
 - Since we will use a REST HTTP and WebSocket server, we can easily put everything in one file.
 - We first add all the packages we need in the routes.rs file
 - Adding a route for embedding the home page to the root url